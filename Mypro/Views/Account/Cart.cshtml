@model List<Mypro.Models.CartItem>
@using System.Globalization
@{
    ViewData["Title"] = "My Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // server-supplied discount data
    decimal orderDiscountPercent = ViewBag.OrderDiscountPercent ?? 2m;
    decimal dateDiscountPercent = ViewBag.DateDiscountPercent ?? 2m;

    decimal subtotalServer = Model.Sum(i => i.Price * i.Quantity);
    decimal totalDiscountPercentServer = orderDiscountPercent + dateDiscountPercent;
    decimal totalDiscountAmountServer = Math.Round(subtotalServer * totalDiscountPercentServer / 100m, 2);
    decimal gstPercentServer = 2m;
    decimal gstAmountServer = Math.Round((subtotalServer - totalDiscountAmountServer) * gstPercentServer / 100m, 2);
    decimal finalAmountServer = Math.Round(subtotalServer - totalDiscountAmountServer + gstAmountServer, 2);
}



<section class="cart-section container my-1">

  
    <div style="display: flex; align-items: center; justify-content: space-between; margin-bottom: 20px;">

        <a href="javascript:history.back()"
           style="
       position: absolute;
       display: inline-flex;
       align-items: center;
       justify-content: center;
       width: 45px;
       height: 45px;
       border-radius: 50%;
       background-color: lightcoral;
       color: #000;
       font-size: 22px;
       font-weight: bold;
       text-decoration: none;
       box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
       left: 7%;
       transition: all 0.3s ease;
       z-index: 100;
   "
           onmouseover="this.style.backgroundColor='#e0e0e0'; this.style.transform='scale(1.1)';"
           onmouseout="this.style.backgroundColor='lightcoral'; this.style.transform='scale(1)';">
            ←
        </a>



        <h2 class="fw-bold"
            style="flex: 1; text-align: center; color: #000; font-family: 'Playfair Display', serif; font-size: 2.5rem; letter-spacing: 1px; text-transform: uppercase; margin: 0;">
            My Cart
        </h2>


        <a asp-controller="Order" asp-action="MyOrders"
           class="btn btn-gradient fw-bold"
           style="position: absolute; right: 7%; top: 90px; transform: translateY(0);">
            My Orders
        </a>


        <div style="width: 40px;"></div>
    </div>

    <!-- Scrolling notice -->
    <div class="cart-notice-container">
        <marquee behavior="scroll" direction="left" scrollamount="5" class="cart-notice">
            Price for all items except Dupatta is calculated per meter.
        </marquee>
    </div>

    

    @if (!Model.Any())
    {
        <div class="text-center py-5 empty-cart">
            <i class="bi bi-cart-x mb-3"></i>
            <h4>Your cart is empty!</h4>
            <a href="/" class="btn btn-gradient mt-3">Continue Shopping</a>
        </div>
    }
    else
    {
       
        <!-- Cart Items -->
        <div class="cart-items">
            @foreach (var item in Model)
            {
                <div class="cart-card">
                    <!-- Image Box -->
                    <div class="cart-img-box">
                        <img src="@Url.Content(item.Image.ImagePath)" alt="Image" class="cart-img" onclick="openImageModal(this)">
                    </div>

                    <!-- Details Box -->
                    <div class="cart-details-box">
                        <h5 class="fw-bold">@item.Image.Category.CategoryName</h5>
                        <p class="mb-1">
                            <strong>Color:</strong> @item.Image.Color
                            @if (!string.IsNullOrEmpty(item.Image.HexColor))
                            {
                                <span class="color-circle" style="background-color:@item.Image.HexColor;"></span>
                            }
                        </p>
                        <p class="mb-2 text-muted" style="color:brown;"><strong>Description:</strong> @item.Image.Description</p>
                        <p class="fw-bold text-primary">Price: ₹<span class="item-price">@item.Price</span></p>

                         <!-- Quantity -->
                        <div class="d-flex align-items-center gap-2 mb-3">
                            <label class="fw-bold mb-0">Qty:</label>
                            <input type="number" class="form-control form-control-sm quantity-input"
                                   data-price="@item.Price"
                                   value="@item.Quantity" min="1" style="width:70px;">
                        </div>

                        <p class="fw-bold text-success">Total: ₹<span class="item-total">@(@item.Price* item.Quantity)</span></p>

                        <form asp-action="RemoveFromCart" asp-controller="Account" method="post">
                            <input type="hidden" name="id" value="@item.Id" />
                            <button class="btn btn-outline-danger btn-sm">Remove Item</button>
                        </form>
                    </div>
                </div>
            }
        </div>


        <!-- Price Summary -->
        <div class="price-summary mt-5 p-4 bg-white rounded-4 shadow-lg">
            <h4 class="fw-bold mb-4 text-center text-gradient">Price Details</h4>

            <div class="d-flex justify-content-between mb-2">
                <span>Total MRP:</span>
                <span id="total-mrp">₹@subtotalServer</span>
            </div>

            <div class="d-flex justify-content-between mb-2">
                <span>
                    Order Discount (@orderDiscountPercent% -
                    @(orderDiscountPercent == 5 ? "First Order" : "Returning Order")):
                </span>

                <span id="order-discount-amount">-₹@(Math.Round(subtotalServer * orderDiscountPercent / 100m, 2))</span>
            </div>

            <div class="d-flex justify-content-between mb-2">
                <span>
                    Date Discount (@dateDiscountPercent% -
                    @(dateDiscountPercent == 4 ? " Date 1 to 10" : dateDiscountPercent == 3 ? " Date 11 to 20" : " Date 21 to 31") of month):
                </span>

                <span id="date-discount-amount">-₹@(Math.Round(subtotalServer * dateDiscountPercent / 100m, 2))</span>
            </div>

            <div class="d-flex justify-content-between mb-2">
                <span>Total Discount (@totalDiscountPercentServer%):</span>
                <span id="discount-amount">-₹@totalDiscountAmountServer</span>
            </div>

            <div class="d-flex justify-content-between mb-2">
                <span>GST (@gstPercentServer%):</span>
                <span id="gst-amount">₹@gstAmountServer</span>
            </div>

            <hr>

            <div class="d-flex justify-content-between fw-bold fs-5">
                <span>TOTAL AMOUNT:</span>
                <span id="total-amount">₹@finalAmountServer</span>
            </div>

            <form asp-controller="Order" asp-action="Checkout" method="post" id="checkoutForm">
                @{
                    var idx = 0;
                }
                @foreach (var item in Model)
                {
                    <input type="hidden" name="CartItems[@idx].Id" value="@item.Id" />
                    <input type="hidden" name="CartItems[@idx].Quantity" class="checkout-qty" value="@item.Quantity" />
                    idx++;
                }
                <button type="submit" class="btn btn-gradient btn-lg fw-bold">Proceed to Checkout</button>
            </form>
        </div>
      
        <!-- 📌 Discount Notes -->
        <div class="mt-4 mx-auto rounded-4 shadow-lg p-4 border-2 border-warning"
             style="max-width: 650px; background: #334155; color: #e2e8f0; font-size: 1.05rem;">
            <h5 class="fw-bold mb-3 text-warning">
                <i class="bi bi-info-circle-fill me-2"></i> Discount Notes
            </h5>
            <ul class="mb-0 ps-3">
                <li class="mb-2">
                    First Order → <span class="fw-bold" style="color:#38bdf8;">5% order-discount</span>
                </li>
                <li class="mb-2">
                    Second Order onwards → <span class="fw-bold" style="color:#38bdf8;">2% order-discount</span>
                </li>
                <li>
                    Current Date:
                    <ul class="mt-2 ps-3">
                        <li>1 to 10 Date → <span class="fw-bold" style="color:#facc15;">4% date-discount</span></li>
                        <li>11 to 20 Date → <span class="fw-bold" style="color:#facc15;">3% date-discount</span></li>
                        <li>21 to 31 Date → <span class="fw-bold" style="color:#facc15;">2% date-discount</span></li>
                    </ul>
                </li>
            </ul>
        </div>


    }
</section>

<!-- Image Zoom Modal -->
<div id="imageModal" class="image-modal" onclick="closeImageModal()">
    <span class="close-btn">&times;</span>
    <img class="modal-content" id="modalImage">
</div>


<!-- Styling -->
<style>

    .cart-section {
        background-color: transparent; 
    }


    body {
        position: relative;
        background-image: url('/template/assets/img/catimg.png');
        background-size: cover;
        background-position: center;
        background-attachment: fixed;
        background-repeat: no-repeat;
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
    }


        body::before {
            content: "";
            position: fixed;
            inset: 0;
            background: rgba(255, 255, 255, 0.7);
            z-index: -1;
        }


    /* Image Modal */
    .image-modal {
        display: none;
        position: fixed;
        z-index: 1000;
        padding-top: 60px;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.8);
        overflow: auto;
        text-align: center;
    }

        .image-modal .modal-content {
            margin: auto;
            display: block;
            max-width: 30%;
            max-height: 70vh;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.5);
            animation: zoomIn 0.3s ease;
        }

    keyframes zoomIn {
        from

    {
        transform: scale(0.7);
    }

    to {
        transform: scale(1);
    }

    }

    .image-modal .close-btn {
        position: absolute;
        top: 15px;
        right: 35px;
        color: #fff;
        font-size: 35px;
        font-weight: bold;
        cursor: pointer;
    }


    .cart-items {
        display: flex;
        flex-direction: column;
        gap: 15px; 
    }

    .cart-card {
        display: flex;
        justify-content: center; 
        align-items: center;
        gap: 15px;
        border-radius: 16px;
        width: 70%;
        margin: 0 auto;
        background-color: #fff;
        box-shadow: 0 2px 6px rgba(0,0,0,0.2), /* bottom */
                    0 -2px 6px rgba(0,0,0,0.2), /* top */
                    1px 0 6px rgba(0,0,0,0.2), /* right */
                    -1px 0 6px rgba(0,0,0,0.2); /* left */
    }

    .cart-details-box {
        flex: 1;
        max-width: 460px; 
       
        border-radius: 16px;
        box-shadow: none; 
        padding: 15px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .cart-img {
        width: 200px;
        height: 200px;
        object-fit: cover;
        border-radius: 12px;
    }

    .cart-details-box h5 {
        font-size: 1.4rem;
        margin-bottom: 14px;
        font-weight: 700;
        color: black;
    }

    .cart-details-box p {
        margin: 4px 0;
        font-size: 1rem;
        color: black;
    }

    .text-gradient {
        background: linear-gradient(45deg, #FF416C, #FF4B2B);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .btn-gradient {
        background: linear-gradient(135deg, #FF416C, #FF4B2B);
        color: #fff;
        border-radius: 50px;
        padding: 12px 30px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

        .btn-gradient:hover {
            transform: translateY(-3px) scale(1.05);
            box-shadow: 0 10px 20px rgba(255,65,108,0.5);
        }

    .color-circle {
        display: inline-block;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        border: 1px solid #ccc;
        margin-left: 5px;
        vertical-align: middle;
    }

    .back-btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 45px;
        height: 45px;
        border-radius: 50%;
        background-color: #fff;
        color: #FF416C;
        font-size: 22px;
        font-weight: bold;
        text-decoration: none;
        margin-bottom: 20px;
        transition: all 0.3s ease;
    }

        .back-btn:hover {
            background-color: #FF416C;
            color: #fff;
            transform: scale(1.1);
        }

    .price-summary {
        max-width: 500px;
        margin: 40px auto;
        padding: 30px;
        border-radius: 20px;
        background: rgba(255, 255, 255, 0.25); /* Transparent white */
        backdrop-filter: blur(12px) saturate(180%);
        -webkit-backdrop-filter: blur(12px) saturate(180%);
        border: 1px solid rgba(255, 255, 255, 0.4);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease-in-out;
    }

        /* Gradient border glow */
        .price-summary::before {
            content: "";
            position: absolute;
            inset: 0;
            padding: 2px;
            border-radius: 20px;
            background: linear-gradient(135deg, #ff416c, #ff4b2b, #ff9966);
            -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
            -webkit-mask-composite: xor;
            mask-composite: exclude;
            pointer-events: none;
        }

        /* Hover lift */
        .price-summary:hover {
            transform: translateY(-6px) scale(1.02);
            box-shadow: 0 12px 35px rgba(0, 0, 0, 0.25);
        }

        /* Heading */
        .price-summary h4 {
            font-size: 2rem;
            font-weight: 700;
            text-align: center;
            background: linear-gradient(90deg, #ff416c, #ff4b2b, #ff9966);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 25px;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        /* Values */
        .price-summary span {
            font-size: 1.1rem;
            color: #222;
        }

        /* Total Highlight */
        .price-summary .fw-bold.fs-5 {
            font-size: 1.6rem !important;
            color: #ff4b2b;
            text-shadow: 0 2px 10px rgba(255, 75, 43, 0.3);
        }

        /* Checkout button */
        .price-summary .btn-gradient {
            display: inline-block;
            padding: 14px 35px;
            margin-top: 25px;
            border-radius: 40px;
            font-weight: 700;
            background: linear-gradient(135deg, #ff416c, #ff4b2b, #ff9966);
            color: #fff;
            letter-spacing: 1px;
            box-shadow: 0 4px 15px rgba(255, 75, 43, 0.4);
            transition: all 0.3s ease-in-out;
        }

            .price-summary .btn-gradient:hover {
                transform: scale(1.08) translateY(-3px);
                box-shadow: 0 10px 25px rgba(255, 75, 43, 0.6);
            }


    .empty-cart i {
        font-size: 5rem;
        color: #FF416C;
    }

    .cart-notice-container {
        max-width: 800px;
        margin: 20px auto;
        background-color: #fff7e6;
        padding: 10px 15px;
        border-radius: 12px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.15);
    }

    .cart-notice {
        font-size: 1.5rem;
        font-weight: 600;
        color: #ff416c;
    }

</style>

<!-- Script -->
<script>
    // Server-supplied discount numbers
    const serverOrderDiscountPercent = @orderDiscountPercent;
    const serverDateDiscountPercent = @dateDiscountPercent;
    const serverGSTPercent = 2.0;

    // Get all quantity inputs
    const quantityInputs = document.querySelectorAll('.quantity-input');

    // Function to update totals
    function updateTotals() {
        let totalMRP = 0;

        quantityInputs.forEach(input => {
            const price = parseFloat(input.dataset.price) || 0;
            const qty = parseInt(input.value) || 1;
            const itemTotal = price * qty;

            // Update item total in DOM
            const itemTotalEl = input.closest('.cart-card').querySelector('.item-total');
            itemTotalEl.textContent = itemTotal.toFixed(2);

            totalMRP += itemTotal;
        });

        // Calculate discounts and GST
        const orderDisc = (totalMRP * serverOrderDiscountPercent / 100);
        const dateDisc = (totalMRP * serverDateDiscountPercent / 100);
        const totalDiscount = orderDisc + dateDisc;
        const gstAmount = ((totalMRP - totalDiscount) * serverGSTPercent / 100);
        const finalAmount = totalMRP - totalDiscount + gstAmount;

        // Update summary DOM elements
        document.getElementById('total-mrp').textContent = '₹' + totalMRP.toFixed(2);
        document.getElementById('order-discount-amount').textContent = '-₹' + orderDisc.toFixed(2);
        document.getElementById('date-discount-amount').textContent = '-₹' + dateDisc.toFixed(2);
        document.getElementById('discount-amount').textContent = '-₹' + totalDiscount.toFixed(2);
        document.getElementById('gst-amount').textContent = '₹' + gstAmount.toFixed(2);
        document.getElementById('total-amount').textContent = '₹' + finalAmount.toFixed(2);
    }

    // Add event listener to all quantity inputs
    quantityInputs.forEach(input => {
        input.addEventListener('input', updateTotals);
    });

    // Initial totals update on page load
    updateTotals();

    // Update checkout hidden inputs before form submission
    const checkoutForm = document.getElementById('checkoutForm');
    checkoutForm.addEventListener('submit', function(e) {
        const hiddenQtyInputs = checkoutForm.querySelectorAll('.checkout-qty');
        quantityInputs.forEach((input, idx) => {
            hiddenQtyInputs[idx].value = input.value;
        });
    });

    // Image modal
    function openImageModal(img) {
        var modal = document.getElementById("imageModal");
        var modalImg = document.getElementById("modalImage");
        modal.style.display = "block";
        modalImg.src = img.src;
    }

    function closeImageModal() {
        document.getElementById("imageModal").style.display = "none";
    }
</script>

